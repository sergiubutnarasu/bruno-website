/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import '@stencil/router';
import '@stencil/state-tunnel';
import 'bruno-ui';


declare global {

  namespace StencilComponents {
    interface AppButton {

    }
  }

  interface HTMLAppButtonElement extends StencilComponents.AppButton, HTMLStencilElement {}

  var HTMLAppButtonElement: {
    prototype: HTMLAppButtonElement;
    new (): HTMLAppButtonElement;
  };
  interface HTMLElementTagNameMap {
    'app-button': HTMLAppButtonElement;
  }
  interface ElementTagNameMap {
    'app-button': HTMLAppButtonElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-button': JSXElements.AppButtonAttributes;
    }
  }
  namespace JSXElements {
    export interface AppButtonAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppCheckbox {

    }
  }

  interface HTMLAppCheckboxElement extends StencilComponents.AppCheckbox, HTMLStencilElement {}

  var HTMLAppCheckboxElement: {
    prototype: HTMLAppCheckboxElement;
    new (): HTMLAppCheckboxElement;
  };
  interface HTMLElementTagNameMap {
    'app-checkbox': HTMLAppCheckboxElement;
  }
  interface ElementTagNameMap {
    'app-checkbox': HTMLAppCheckboxElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-checkbox': JSXElements.AppCheckboxAttributes;
    }
  }
  namespace JSXElements {
    export interface AppCheckboxAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppColumn {

    }
  }

  interface HTMLAppColumnElement extends StencilComponents.AppColumn, HTMLStencilElement {}

  var HTMLAppColumnElement: {
    prototype: HTMLAppColumnElement;
    new (): HTMLAppColumnElement;
  };
  interface HTMLElementTagNameMap {
    'app-column': HTMLAppColumnElement;
  }
  interface ElementTagNameMap {
    'app-column': HTMLAppColumnElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-column': JSXElements.AppColumnAttributes;
    }
  }
  namespace JSXElements {
    export interface AppColumnAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppComponents {

    }
  }

  interface HTMLAppComponentsElement extends StencilComponents.AppComponents, HTMLStencilElement {}

  var HTMLAppComponentsElement: {
    prototype: HTMLAppComponentsElement;
    new (): HTMLAppComponentsElement;
  };
  interface HTMLElementTagNameMap {
    'app-components': HTMLAppComponentsElement;
  }
  interface ElementTagNameMap {
    'app-components': HTMLAppComponentsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-components': JSXElements.AppComponentsAttributes;
    }
  }
  namespace JSXElements {
    export interface AppComponentsAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppDropdown {

    }
  }

  interface HTMLAppDropdownElement extends StencilComponents.AppDropdown, HTMLStencilElement {}

  var HTMLAppDropdownElement: {
    prototype: HTMLAppDropdownElement;
    new (): HTMLAppDropdownElement;
  };
  interface HTMLElementTagNameMap {
    'app-dropdown': HTMLAppDropdownElement;
  }
  interface ElementTagNameMap {
    'app-dropdown': HTMLAppDropdownElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-dropdown': JSXElements.AppDropdownAttributes;
    }
  }
  namespace JSXElements {
    export interface AppDropdownAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppHome {

    }
  }

  interface HTMLAppHomeElement extends StencilComponents.AppHome, HTMLStencilElement {}

  var HTMLAppHomeElement: {
    prototype: HTMLAppHomeElement;
    new (): HTMLAppHomeElement;
  };
  interface HTMLElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  interface ElementTagNameMap {
    'app-home': HTMLAppHomeElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-home': JSXElements.AppHomeAttributes;
    }
  }
  namespace JSXElements {
    export interface AppHomeAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppInput {

    }
  }

  interface HTMLAppInputElement extends StencilComponents.AppInput, HTMLStencilElement {}

  var HTMLAppInputElement: {
    prototype: HTMLAppInputElement;
    new (): HTMLAppInputElement;
  };
  interface HTMLElementTagNameMap {
    'app-input': HTMLAppInputElement;
  }
  interface ElementTagNameMap {
    'app-input': HTMLAppInputElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-input': JSXElements.AppInputAttributes;
    }
  }
  namespace JSXElements {
    export interface AppInputAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppRadio {

    }
  }

  interface HTMLAppRadioElement extends StencilComponents.AppRadio, HTMLStencilElement {}

  var HTMLAppRadioElement: {
    prototype: HTMLAppRadioElement;
    new (): HTMLAppRadioElement;
  };
  interface HTMLElementTagNameMap {
    'app-radio': HTMLAppRadioElement;
  }
  interface ElementTagNameMap {
    'app-radio': HTMLAppRadioElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-radio': JSXElements.AppRadioAttributes;
    }
  }
  namespace JSXElements {
    export interface AppRadioAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppRoot {

    }
  }

  interface HTMLAppRootElement extends StencilComponents.AppRoot, HTMLStencilElement {}

  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };
  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  interface ElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-root': JSXElements.AppRootAttributes;
    }
  }
  namespace JSXElements {
    export interface AppRootAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppTab {

    }
  }

  interface HTMLAppTabElement extends StencilComponents.AppTab, HTMLStencilElement {}

  var HTMLAppTabElement: {
    prototype: HTMLAppTabElement;
    new (): HTMLAppTabElement;
  };
  interface HTMLElementTagNameMap {
    'app-tab': HTMLAppTabElement;
  }
  interface ElementTagNameMap {
    'app-tab': HTMLAppTabElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-tab': JSXElements.AppTabAttributes;
    }
  }
  namespace JSXElements {
    export interface AppTabAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppToggle {

    }
  }

  interface HTMLAppToggleElement extends StencilComponents.AppToggle, HTMLStencilElement {}

  var HTMLAppToggleElement: {
    prototype: HTMLAppToggleElement;
    new (): HTMLAppToggleElement;
  };
  interface HTMLElementTagNameMap {
    'app-toggle': HTMLAppToggleElement;
  }
  interface ElementTagNameMap {
    'app-toggle': HTMLAppToggleElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-toggle': JSXElements.AppToggleAttributes;
    }
  }
  namespace JSXElements {
    export interface AppToggleAttributes extends HTMLAttributes {

    }
  }
}


declare global {

  namespace StencilComponents {
    interface AppTypography {

    }
  }

  interface HTMLAppTypographyElement extends StencilComponents.AppTypography, HTMLStencilElement {}

  var HTMLAppTypographyElement: {
    prototype: HTMLAppTypographyElement;
    new (): HTMLAppTypographyElement;
  };
  interface HTMLElementTagNameMap {
    'app-typography': HTMLAppTypographyElement;
  }
  interface ElementTagNameMap {
    'app-typography': HTMLAppTypographyElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-typography': JSXElements.AppTypographyAttributes;
    }
  }
  namespace JSXElements {
    export interface AppTypographyAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
